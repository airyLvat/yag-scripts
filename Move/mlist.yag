{{addMessageReactions nil .Message.ID "a:LoadingAnim:834710843568422963"}}
{{$botUser := getMember .BotUser.ID}}

{{$title := ""}}
{{$count := 0}}
{{$retQuant := 25}}

{{if not .CmdArgs}}
	{{$title = joinStr "" "List of first " $retQuant " moved users that are still in the server"}}
{{else}}
	{{$count = index .CmdArgs 0}}
	{{$title = joinStr "" "List of moved users that are still in the server " $count " to " (add $count $retQuant)}}
{{end}}

{{$outp := joinStr "" "There are a total of " (dbCount 21191) " moved users."}}
{{if gt (toInt $count) (dbCount 21191)}}
	{{$outp = joinStr "" $outp "You asked for " $count " which is out of range, silly."}}
{{else}}
	{{$outp = joinStr "" $outp " To see next " $retQuant " moved users, use `^mlist " (add $count $retQuant) "`"}}
{{end}}

{{range (dbGetPattern 21191 "%" $retQuant $count)}}
	{{$exp := ""}}
	{{$mem := ""}}
    {{$inServer := true}}

    {{try}}
        {{$mem = getMember .Key}}
        {{if not $mem}}
            {{$inServer = false}}
        {{end}}
    {{catch}}
        {{$inServer = false}}
    {{end}}

    {{if $inServer}}
        {{$outp = joinStr "" $outp "\n\n* **" $mem.User.Username "** (" $mem.User.ID}}
        {{$perm := eq (newDate 1 1 1 0 0 0).Unix .ExpiresAt.Unix}}

        {{if $perm}}
            {{$exp = joinStr "" "__**(permanent)**__ since <t:" .CreatedAt.Unix ">"}}
        {{else}}
            {{$exp = humanizeDurationMinutes (.ExpiresAt.Sub currentTime)}}
        {{end}}

        {{$outp = joinStr "" $outp ") moved to <#" .Value "> til " $exp}}
    {{end}}
{{else}}
	{{$outp = joinStr "" $outp "\n## Nothing in this range"}}
{{end}}

{{sendMessage nil (complexMessage "embed" (cembed "title" $title "description" $outp "color" 0xf3c6d4))}}

{{deleteMessageReaction nil .Message.ID .BotUser.ID "a:LoadingAnim:834710843568422963"}}
{{addMessageReactions nil .Message.ID "âœ…"}}
